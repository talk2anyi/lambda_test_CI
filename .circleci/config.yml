# Build settings for Circle CI
version: 2.1

orbs:
  # Third party orb: https://circleci.com/orbs/registry/orb/datacamp/shallow-checkout
  # (append ?version=0.0.3 to URL to view this version)
  shallow-checkout: datacamp/shallow-checkout@0.0.3
  # Third party orb: https://circleci.com/developer/orbs/orb/circleci/aws-ecr
  # (append ?version=8.2.1 to URL to view this version)
  #aws-ecr: circleci/aws-ecr@9.0.1

executors:
    test_machine_2:
      docker:
      - image: cimg/base:2023.10 #cimg/python:3.10
      #- image: amazon/aws-lambda-python:3.10
      resource_class: small
      environment:
        aws-access-key-id: AWS_ACCESS_KEY_ID
        aws-secret-access-key: AWS_SECRET_ACCESS_KEY   
        region: us-east-1


commands:
  #start_docker:
  #  steps:
  #    - run:
  #        name: Start docker engine
  #        command: |
  #          sudo usermod -aG docker circleci_deploy
  #          sudo chmod 666 /var/run/docker.sock
  #          sudo systemctl restart docker 
  #          sudo systemctl enable docker
            

  check_docker_versions:
    steps:
      - run:
          name: Check docker versions
          command: |
            docker -v
            docker compose -v

  whats_running:
    steps:
      - run:
          name: What's running?
          command: docker ps

  login_to_ecr:
    steps:
      - run:
          name: ECR Login
          command: aws ecr get-login-password --region $region | docker login --username AWS --password-stdin 481233474772.dkr.ecr.$region.amazonaws.com            


  install_aws_cli:
    steps:
      - run:
          name: Install aws-cli
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

jobs:
  build:
    executor: test_machine_2
    working_directory: ~/project
    steps:
      - shallow-checkout/checkout
      - setup_remote_docker:
          version: 20.10.24
          docker_layer_caching: true  
      
      - login_to_ecr
      - check_docker_versions 
      - whats_running
      - install_aws_cli

      - run:
          name: Build Lambda Docker Image
          command: |
            #AWS_REGION='us-east-1'
            IMAGE_VERSION='2023-10-25'
          
            docker build --file ./collator/Dockerfile-US --platform linux/amd64 --tag 481233474772.dkr.ecr.$region.amazonaws.com/lambda_images:lambda_test_collator-$IMAGE_VERSION-amd64 . 
            sleep 2m

  deploy:
    executor: test_machine_2
    steps:
      - shallow-checkout/checkout
      - setup_remote_docker:
          version: 20.10.24
          docker_layer_caching: true  
      
      - login_to_ecr
      - install_aws_cli

      - run:
          name: Log In to ECR
          command: |
            aws ecr get-login-password --region $region | docker login --username AWS --password-stdin 481233474772.dkr.ecr.$region.amazonaws.com            

      - run:
          name: Push Image to ECR
          command: |
            docker push 481233474772.dkr.ecr.$region.amazonaws.com/lambda_images:lambda_test_collator-$IMAGE_VERSION-amd64

      - run:
          name: Update AWS Lambda Function
          command: |
            AWS_REGION='us-east-1'
            IMAGE_URI=481233474772.dkr.ecr.$AWS_REGION.amazonaws.com/lambda_images:lambda_collator-$IMAGE_VERSION-amd64
            IAM_ROLE_ARN=arn:aws:iam::481233474772:user/circleci_deploy
          
            aws lambda create-function \
              --function-name s3_log_collation_v2_test \
              --package-type Image \
              --code ImageUri=$IMAGE_URI \
              --role $IAM_ROLE_ARN

   
workflows:
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main





